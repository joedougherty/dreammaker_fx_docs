<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.15">
  <compounddef id="dm__fx__spi__proto_8cpp" kind="file" language="C++">
    <compoundname>dm_fx_spi_proto.cpp</compoundname>
    <includes local="no">SPI.h</includes>
    <includes refid="dreammakerfx_8h" local="yes">dreammakerfx.h</includes>
    <includes refid="dm__fx__spi__proto_8h" local="yes">dm_fx_spi_proto.h</includes>
    <incdepgraph>
      <node id="117">
        <label>SPI.h</label>
      </node>
      <node id="122">
        <label>dm_fx_dsp.h</label>
        <link refid="dm__fx__dsp_8h_source"/>
      </node>
      <node id="125">
        <label>dm_fx_ui.h</label>
        <link refid="dm__fx__ui_8h_source"/>
      </node>
      <node id="147">
        <label>effects/dm_fx_slicer.h</label>
        <link refid="dm__fx__slicer_8h_source"/>
      </node>
      <node id="129">
        <label>effects/dm_fx_effect_macros.h</label>
        <link refid="dm__fx__effect__macros_8h_source"/>
      </node>
      <node id="118">
        <label>dreammakerfx.h</label>
        <link refid="dreammakerfx_8h_source"/>
        <childnode refid="119" relation="include">
        </childnode>
        <childnode refid="117" relation="include">
        </childnode>
        <childnode refid="120" relation="include">
        </childnode>
        <childnode refid="121" relation="include">
        </childnode>
        <childnode refid="122" relation="include">
        </childnode>
        <childnode refid="123" relation="include">
        </childnode>
        <childnode refid="124" relation="include">
        </childnode>
        <childnode refid="125" relation="include">
        </childnode>
        <childnode refid="126" relation="include">
        </childnode>
        <childnode refid="127" relation="include">
        </childnode>
        <childnode refid="128" relation="include">
        </childnode>
        <childnode refid="129" relation="include">
        </childnode>
        <childnode refid="130" relation="include">
        </childnode>
        <childnode refid="131" relation="include">
        </childnode>
        <childnode refid="132" relation="include">
        </childnode>
        <childnode refid="133" relation="include">
        </childnode>
        <childnode refid="134" relation="include">
        </childnode>
        <childnode refid="135" relation="include">
        </childnode>
        <childnode refid="136" relation="include">
        </childnode>
        <childnode refid="137" relation="include">
        </childnode>
        <childnode refid="138" relation="include">
        </childnode>
        <childnode refid="139" relation="include">
        </childnode>
        <childnode refid="140" relation="include">
        </childnode>
        <childnode refid="141" relation="include">
        </childnode>
        <childnode refid="142" relation="include">
        </childnode>
        <childnode refid="143" relation="include">
        </childnode>
        <childnode refid="144" relation="include">
        </childnode>
        <childnode refid="145" relation="include">
        </childnode>
        <childnode refid="146" relation="include">
        </childnode>
        <childnode refid="147" relation="include">
        </childnode>
        <childnode refid="148" relation="include">
        </childnode>
      </node>
      <node id="141">
        <label>effects/dm_fx_looper.h</label>
        <link refid="dm__fx__looper_8h_source"/>
      </node>
      <node id="131">
        <label>effects/dm_fx_allpass_filter.h</label>
        <link refid="dm__fx__allpass__filter_8h_source"/>
      </node>
      <node id="139">
        <label>effects/dm_fx_gain.h</label>
        <link refid="dm__fx__gain_8h_source"/>
      </node>
      <node id="128">
        <label>effects/dm_fx_effects_defines.h</label>
        <link refid="dm__fx__effects__defines_8h"/>
      </node>
      <node id="143">
        <label>effects/dm_fx_oscillators.h</label>
        <link refid="dm__fx__oscillators_8h_source"/>
      </node>
      <node id="135">
        <label>effects/dm_fx_compressor.h</label>
        <link refid="dm__fx__compressor_8h_source"/>
      </node>
      <node id="132">
        <label>effects/dm_fx_amplitude_modulator.h</label>
        <link refid="dm__fx__amplitude__modulator_8h_source"/>
      </node>
      <node id="123">
        <label>dm_fx_spi_proto.h</label>
        <link refid="dm__fx__spi__proto_8h_source"/>
      </node>
      <node id="145">
        <label>effects/dm_fx_pitch_shift.h</label>
        <link refid="dm__fx__pitch__shift_8h_source"/>
      </node>
      <node id="120">
        <label>Wire.h</label>
      </node>
      <node id="124">
        <label>dm_fx_codec.h</label>
        <link refid="dm__fx__codec_8h_source"/>
      </node>
      <node id="144">
        <label>effects/dm_fx_phase_shifter.h</label>
        <link refid="dm__fx__phase__shifter_8h_source"/>
      </node>
      <node id="146">
        <label>effects/dm_fx_ring_modulator.h</label>
        <link refid="dm__fx__ring__modulator_8h_source"/>
      </node>
      <node id="138">
        <label>effects/dm_fx_envelope_tracker.h</label>
        <link refid="dm__fx__envelope__tracker_8h_source"/>
      </node>
      <node id="116">
        <label>src/dm_fx_spi_proto.cpp</label>
        <link refid="dm__fx__spi__proto_8cpp"/>
        <childnode refid="117" relation="include">
        </childnode>
        <childnode refid="118" relation="include">
        </childnode>
        <childnode refid="123" relation="include">
        </childnode>
      </node>
      <node id="130">
        <label>effects/dm_fx_adsr_envelope.h</label>
        <link refid="dm__fx__adsr__envelope_8h_source"/>
      </node>
      <node id="140">
        <label>effects/dm_fx_instrument_synth.h</label>
        <link refid="dm__fx__instrument__synth_8h_source"/>
      </node>
      <node id="121">
        <label>math.h</label>
      </node>
      <node id="119">
        <label>Arduino.h</label>
      </node>
      <node id="126">
        <label>dm_fx_debug.h</label>
        <link refid="dm__fx__debug_8h_source"/>
      </node>
      <node id="133">
        <label>effects/dm_fx_biquad_filter.h</label>
        <link refid="dm__fx__biquad__filter_8h_source"/>
      </node>
      <node id="134">
        <label>effects/dm_fx_destructor.h</label>
        <link refid="dm__fx__destructor_8h_source"/>
      </node>
      <node id="148">
        <label>effects/dm_fx_variable_delay.h</label>
        <link refid="dm__fx__variable__delay_8h_source"/>
      </node>
      <node id="127">
        <label>dm_fx_platform_constants.h</label>
        <link refid="dm__fx__platform__constants_8h_source"/>
      </node>
      <node id="137">
        <label>effects/dm_fx_delay_multitap.h</label>
        <link refid="dm__fx__delay__multitap_8h_source"/>
      </node>
      <node id="136">
        <label>effects/dm_fx_delay.h</label>
        <link refid="dm__fx__delay_8h_source"/>
      </node>
      <node id="142">
        <label>effects/dm_fx_mixers.h</label>
        <link refid="dm__fx__mixers_8h_source"/>
      </node>
    </incdepgraph>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//<sp/>Copyright<sp/>(c)<sp/>2020<sp/>Run<sp/>Jump<sp/>Labs<sp/>LLC.<sp/><sp/>All<sp/>right<sp/>reserved.<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">//<sp/>This<sp/>code<sp/>is<sp/>licensed<sp/>under<sp/>MIT<sp/>license<sp/>(see<sp/>license.txt<sp/>for<sp/>details)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;SPI.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;dreammakerfx.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;dm_fx_spi_proto.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>DOXYGEN_SHOULD_SKIP_THIS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="comment">/************************************************************************</highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SPI<sp/>Protocol</highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="15"><highlight class="comment"><sp/>***********************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SPI_SPEED_HZ<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>8000000</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MAX_SPI_BLOCK_SIZE<sp/><sp/><sp/><sp/><sp/><sp/>(2048)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SPI_FIFO_SIZE<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(2048)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SPI_FIFO_MASK<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(SPI_FIFO_SIZE-1)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SPI_RX_FRAME_SIZE<sp/><sp/><sp/><sp/><sp/><sp/><sp/>(SPI_DSP_STAT_FRAME_SIZE<sp/>+<sp/>3)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SPI_RX_PAYLOAD_SIZE<sp/><sp/><sp/><sp/><sp/>(SPI_DSP_STAT_FRAME_SIZE)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Frame<sp/>constants<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>FRAME_HEADER_1<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(0x80FD)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>FRAME_HEADER_2<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(0x80FE)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>FRAME_TERMINATOR<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(0x80FF)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="comment">//<sp/>SPI<sp/>Interface</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal">uint16_t<sp/><sp/><sp/><sp/>spi_tx_fifo[SPI_FIFO_SIZE];</highlight></codeline>
<codeline lineno="35"><highlight class="normal">uint16_t<sp/><sp/><sp/><sp/>spi_rx_frame[SPI_RX_FRAME_SIZE];</highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight><highlight class="comment">//<sp/>DSP<sp/>status<sp/>structure</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"><ref refid="struct_d_s_p___s_t_a_t_u_s" kindref="compound">DSP_STATUS</ref><sp/><sp/><sp/>dsp_status;</highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Initialize<sp/>SPI<sp/>communications</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal">uint16_t<sp/><sp/>spi_tx_wr_ptr<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="44"><highlight class="normal">uint16_t<sp/><sp/>spi_tx_rd_ptr<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="45"><highlight class="normal">int16_t<sp/><sp/><sp/>spi_rx_wr_ptr<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="46"><highlight class="normal">SPI_RX_STATE<sp/><sp/>spi_rx_state<sp/>=<sp/>SPI_RX_WAITING;</highlight></codeline>
<codeline lineno="47"><highlight class="normal">uint16_t<sp/><sp/>spi_service_last_millis<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/>spi_start(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Start<sp/>SPI<sp/>port</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/>pinMode(SPI_SS_PIN,<sp/>OUTPUT);</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/>digitalWrite(SPI_SS_PIN,<sp/>HIGH);<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/>SPI.begin();<sp/><sp/></highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Reset<sp/>SPI<sp/>frame<sp/>in<sp/>case<sp/>we<sp/>just<sp/>updated<sp/>firmware</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/>spi_transmit_buffered_frames(</highlight><highlight class="keyword">true</highlight><highlight class="normal">);<sp/></highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal">}</highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/>spi_stop(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Stop<sp/>SPI<sp/>peripheral</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/>SPI.end();</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/>pinMode(PIN_DSP_SPI_FLASH_SELECT,<sp/>INPUT);</highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal">}</highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/>spi_fifo_reset(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/>spi_tx_wr_ptr<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/>spi_tx_rd_ptr<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/>memset(spi_rx_frame,<sp/>0,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(spi_rx_frame));</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/>memset(&amp;dsp_status,<sp/>0,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(dsp_status));</highlight></codeline>
<codeline lineno="86"><highlight class="normal">}</highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight></codeline>
<codeline lineno="88"><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal"></highlight></codeline>
<codeline lineno="93"><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>spi_fifo_push(uint16_t<sp/>val)<sp/>{</highlight></codeline>
<codeline lineno="94"><highlight class="normal"></highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(SPI_FIFO_MASK<sp/>&amp;<sp/>(spi_tx_wr_ptr+1)<sp/>==<sp/>spi_tx_rd_ptr)<sp/>{</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/>DEBUG_MSG(</highlight><highlight class="stringliteral">&quot;Not<sp/>enough<sp/>room<sp/>in<sp/>FIFO&quot;</highlight><highlight class="normal">,<sp/>MSG_WARN);</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/>spi_tx_fifo[spi_tx_wr_ptr++]<sp/>=<sp/>val;</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/>spi_tx_wr_ptr<sp/>&amp;=<sp/>SPI_FIFO_MASK;</highlight></codeline>
<codeline lineno="102"><highlight class="normal"></highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="104"><highlight class="normal"></highlight></codeline>
<codeline lineno="105"><highlight class="normal">}</highlight></codeline>
<codeline lineno="106"><highlight class="normal"></highlight></codeline>
<codeline lineno="110"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/>spi_fifo_push_emptry_frame(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i=0;i&lt;SPI_RX_FRAME_SIZE;i++)<sp/>{</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>spi_fifo_push(0);</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="114"><highlight class="normal">}</highlight></codeline>
<codeline lineno="115"><highlight class="normal"></highlight></codeline>
<codeline lineno="116"><highlight class="normal"></highlight></codeline>
<codeline lineno="120"><highlight class="keyword">static</highlight><highlight class="normal"><sp/>uint16_t<sp/>spi_fifo_available_space(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(spi_tx_wr_ptr<sp/>&gt;<sp/>spi_tx_rd_ptr)<sp/>{</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>SPI_FIFO_SIZE<sp/>-<sp/>(spi_tx_wr_ptr<sp/>-<sp/>spi_tx_rd_ptr);</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/>}<sp/></highlight></codeline>
<codeline lineno="124"><highlight class="normal"></highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(spi_tx_rd_ptr<sp/>&gt;<sp/>spi_tx_wr_ptr)<sp/>{</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(spi_tx_rd_ptr<sp/>-<sp/>spi_tx_wr_ptr)<sp/>-<sp/>1;</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/>}<sp/></highlight></codeline>
<codeline lineno="128"><highlight class="normal"></highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>SPI_FIFO_SIZE;</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="132"><highlight class="normal">}</highlight></codeline>
<codeline lineno="133"><highlight class="normal"></highlight></codeline>
<codeline lineno="145"><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><sp/>spi_fifo_insert_block(uint16_t<sp/>*<sp/>data,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>size)<sp/>{</highlight></codeline>
<codeline lineno="146"><highlight class="normal"></highlight></codeline>
<codeline lineno="147"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>msg[64];</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/>sprintf(msg,</highlight><highlight class="stringliteral">&quot;Inserting<sp/>block<sp/>of<sp/>size<sp/>%d&quot;</highlight><highlight class="normal">,<sp/>size);</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/>DEBUG_MSG(msg,<sp/>MSG_INFO);</highlight></codeline>
<codeline lineno="151"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Check<sp/>if<sp/>block<sp/>exceeds<sp/>size</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(size<sp/>&gt;<sp/>MAX_SPI_BLOCK_SIZE-3)<sp/>{</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/>DEBUG_MSG(</highlight><highlight class="stringliteral">&quot;SPI<sp/>block<sp/>size<sp/>too<sp/>big&quot;</highlight><highlight class="normal">,<sp/>MSG_ERROR);</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/>display_error_status(ERROR_INTERNAL);</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="157"><highlight class="normal"></highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Check<sp/>if<sp/>block<sp/>will<sp/>fit<sp/>in<sp/>the<sp/>fifo</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(size<sp/>&gt;<sp/>spi_fifo_available_space())<sp/>{</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/>DEBUG_MSG(</highlight><highlight class="stringliteral">&quot;SPI<sp/>FIFO<sp/>full&quot;</highlight><highlight class="normal">,<sp/>MSG_ERROR);</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/>display_error_status(ERROR_INTERNAL);</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="163"><highlight class="normal"></highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Add<sp/>frame<sp/>to<sp/>FIFO</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="165"><highlight class="normal"></highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>1.<sp/>Add<sp/>frame<sp/>headers</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/>spi_fifo_push(FRAME_HEADER_1);</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/>spi_fifo_push(FRAME_HEADER_2);</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>2.<sp/>Add<sp/>frame<sp/>size</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/>spi_fifo_push(size);</highlight></codeline>
<codeline lineno="172"><highlight class="normal"></highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>3.<sp/>Add<sp/>frame<sp/>payload</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i=0;i&lt;size;i++)<sp/>{</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/>spi_fifo_push(data[i]);</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="177"><highlight class="normal"></highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>4.<sp/>Add<sp/>frame<sp/>terminator</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/>spi_fifo_push(FRAME_TERMINATOR);</highlight></codeline>
<codeline lineno="180"><highlight class="normal"></highlight></codeline>
<codeline lineno="181"><highlight class="normal">}</highlight></codeline>
<codeline lineno="182"><highlight class="normal"></highlight></codeline>
<codeline lineno="183"><highlight class="normal"></highlight></codeline>
<codeline lineno="184"><highlight class="normal"></highlight></codeline>
<codeline lineno="185"><highlight class="normal"></highlight></codeline>
<codeline lineno="186"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>spi_process_received_frame(uint16_t<sp/>*<sp/>rx_frame)<sp/>{</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="188"><highlight class="normal"></highlight></codeline>
<codeline lineno="189"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#if<sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/>Serial.println(</highlight><highlight class="stringliteral">&quot;-------&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i=0;i&lt;SPI_RX_PAYLOAD_SIZE;i++)<sp/>{</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Serial.println(rx_frame[i],<sp/>HEX);</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="194"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/>dsp_status.firmware_ver<sp/>=<sp/>rx_frame[SPI_DSP_STAT_FIRMWARE_MAJ]<sp/>&lt;&lt;<sp/>16;</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/>dsp_status.firmware_ver<sp/>|=<sp/>rx_frame[SPI_DSP_STAT_FIRMWARE_MIN];</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/>dsp_status.firmware_valid<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(dsp_status.firmware_ver<sp/>&lt;<sp/>10000<sp/>||<sp/>dsp_status.firmware_ver<sp/>&gt;<sp/>99999)<sp/>{</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/>dsp_status.firmware_valid<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="201"><highlight class="normal"></highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/>dsp_status.loading_percentage<sp/>=<sp/>100.0<sp/>*<sp/>((float)<sp/>rx_frame[SPI_DSP_STAT_MIPS_PERCENT]<sp/>*<sp/>(1.0/65536.0));<sp/></highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/>dsp_status.amplitude<sp/>=<sp/><sp/>((float)<sp/>rx_frame[SPI_DSP_STAT_AMPLITUDE])<sp/>/<sp/>65536.0;</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/>dsp_status.new_note<sp/>=<sp/>rx_frame[SPI_DSP_STAT_NEW_NOTE];</highlight></codeline>
<codeline lineno="205"><highlight class="normal"></highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Get<sp/>system<sp/>state</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/>uint16_t<sp/>sys_state<sp/>=<sp/>rx_frame[SPI_DSP_STAT_SYS_STATE];</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/>dsp_status.state_flags<sp/>=<sp/>sys_state;</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/>dsp_status.state_booted<sp/>=<sp/>((sys_state<sp/>&amp;<sp/>SYS_VALID)<sp/>==<sp/>SYS_VALID)?</highlight><highlight class="keyword">true</highlight><highlight class="normal">:</highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/>dsp_status.state_initialized<sp/>=<sp/>(sys_state<sp/>&amp;<sp/>SYS_INITIALIZED)?</highlight><highlight class="keyword">true</highlight><highlight class="normal">:</highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/>dsp_status.state_lf_audio_running<sp/>=<sp/>(sys_state<sp/>&amp;<sp/>SYS_LF_AUDIO)?</highlight><highlight class="keyword">true</highlight><highlight class="normal">:</highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/>dsp_status.state_hf_audio_running<sp/>=<sp/>(sys_state<sp/>&amp;<sp/>SYS_HF_AUDIO)?</highlight><highlight class="keyword">true</highlight><highlight class="normal">:</highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/>dsp_status.state_canvas_running<sp/><sp/>=<sp/>(sys_state<sp/>&amp;<sp/>SYS_CANVAS_OK)?</highlight><highlight class="keyword">true</highlight><highlight class="normal">:</highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="214"><highlight class="normal"></highlight></codeline>
<codeline lineno="215"><highlight class="normal"></highlight></codeline>
<codeline lineno="216"><highlight class="normal"></highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/>dsp_status.state_err_allocation<sp/><sp/>=<sp/>(sys_state<sp/>&amp;<sp/>SYS_ERR_ALLOC)?</highlight><highlight class="keyword">true</highlight><highlight class="normal">:</highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/>dsp_status.state_err_param<sp/><sp/>=<sp/>(sys_state<sp/>&amp;<sp/>SYS_ERR_PARAM)?</highlight><highlight class="keyword">true</highlight><highlight class="normal">:</highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/>dsp_status.state_err_corrupt<sp/><sp/>=<sp/>(sys_state<sp/>&amp;<sp/>SYS_ERR_CRPT)?</highlight><highlight class="keyword">true</highlight><highlight class="normal">:</highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/>dsp_status.state_err_other<sp/><sp/>=<sp/>(sys_state<sp/>&amp;<sp/>SYS_ERR_OTHER)?</highlight><highlight class="keyword">true</highlight><highlight class="normal">:</highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="221"><highlight class="normal"></highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="223"><highlight class="normal">}</highlight></codeline>
<codeline lineno="224"><highlight class="normal"></highlight></codeline>
<codeline lineno="225"><highlight class="normal"></highlight></codeline>
<codeline lineno="229"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>spi_transmit_buffered_frames(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>reset_state)<sp/>{</highlight></codeline>
<codeline lineno="230"><highlight class="normal"></highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>uint8_t<sp/><sp/>rx_frame_state<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>uint16_t<sp/>rx_frame_ptr<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>uint16_t<sp/>rx_frame_buf[16];</highlight></codeline>
<codeline lineno="234"><highlight class="normal"></highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(reset_state)<sp/>{</highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/>rx_frame_state<sp/>=<sp/>SPI_RX_WAITING;</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="239"><highlight class="normal"></highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>there<sp/>are<sp/>no<sp/>words<sp/>in<sp/>the<sp/>fifo,<sp/>return</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(spi_tx_wr_ptr<sp/>==<sp/>spi_tx_rd_ptr)<sp/>{</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/>}<sp/><sp/></highlight></codeline>
<codeline lineno="244"><highlight class="normal"></highlight></codeline>
<codeline lineno="245"><highlight class="normal"></highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>we<sp/>last<sp/>serviced<sp/>the<sp/>spi<sp/>port<sp/>less<sp/>than<sp/>10<sp/>milliseconds<sp/>ago,<sp/>hold<sp/>off</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/>uint32_t<sp/>now<sp/>=<sp/>millis();</highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(spi_service_last_millis<sp/>+<sp/>10<sp/>&gt;<sp/>now)<sp/>{</highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/>spi_service_last_millis<sp/>=<sp/>now;</highlight></codeline>
<codeline lineno="252"><highlight class="normal"></highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Begin<sp/>SPI<sp/>transaction</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/>SPI.beginTransaction(SPISettings(SPI_SPEED_HZ,<sp/>MSBFIRST,<sp/>SPI_MODE0));</highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/>digitalWrite(SPI_SS_PIN,<sp/>LOW);</highlight></codeline>
<codeline lineno="256"><highlight class="normal"></highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/>uint16_t<sp/>rx_word;</highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(spi_tx_wr_ptr<sp/>!=<sp/>spi_tx_rd_ptr)<sp/>{</highlight></codeline>
<codeline lineno="259"><highlight class="normal"></highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>SPI<sp/>TX/RX<sp/>operation</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/>rx_word<sp/>=<sp/>SPI.transfer16(spi_tx_fifo[spi_tx_rd_ptr++]);</highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(spi_tx_rd_ptr<sp/>&gt;=<sp/>SPI_FIFO_SIZE)<sp/>{</highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>spi_tx_rd_ptr<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="265"><highlight class="normal"></highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Serial.println(rx_word,<sp/>HEX);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="267"><highlight class="normal"></highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>SPI<sp/>process<sp/>received<sp/>frame</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(spi_rx_state<sp/>==<sp/>SPI_RX_RECEIVING<sp/>&amp;&amp;<sp/>rx_word<sp/>==<sp/>FRAME_TERMINATOR)<sp/>{</highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>spi_rx_state<sp/>=<sp/>SPI_RX_WAITING;</highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>spi_process_received_frame(spi_rx_frame);</highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(spi_rx_state<sp/>==<sp/>SPI_RX_RECEIVING)<sp/>{</highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>spi_rx_frame[spi_rx_wr_ptr++]<sp/>=<sp/>rx_word;</highlight></codeline>
<codeline lineno="274"><highlight class="normal"></highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>if<sp/>we&apos;ve<sp/>received<sp/>a<sp/>complete<sp/>frame,<sp/>set<sp/>state<sp/>to<sp/>ready</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(spi_rx_wr_ptr<sp/>&gt;=<sp/>SPI_RX_PAYLOAD_SIZE)<sp/>{</highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>spi_rx_wr_ptr<sp/>=<sp/>SPI_RX_PAYLOAD_SIZE<sp/>-<sp/>1;</highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(spi_rx_state<sp/>==<sp/>SPI_RX_WAITING<sp/>&amp;&amp;<sp/>rx_word<sp/>==<sp/>FRAME_HEADER_1)<sp/>{</highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>spi_rx_state<sp/>=<sp/>SPI_RX_HEADER_1_RX;</highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(spi_rx_state<sp/>==<sp/>SPI_RX_HEADER_1_RX<sp/>&amp;&amp;<sp/>rx_word<sp/>==<sp/>FRAME_HEADER_2)<sp/>{</highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>spi_rx_state<sp/>=<sp/>SPI_RX_RECEIVING;</highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>spi_rx_wr_ptr<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="286"><highlight class="normal"></highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="290"><highlight class="normal"></highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>End<sp/>transaction</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/>digitalWrite(SPI_SS_PIN,<sp/>HIGH);<sp/><sp/></highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/>SPI.endTransaction();</highlight></codeline>
<codeline lineno="294"><highlight class="normal"></highlight></codeline>
<codeline lineno="295"><highlight class="normal"></highlight></codeline>
<codeline lineno="296"><highlight class="normal">}</highlight></codeline>
<codeline lineno="297"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/>//<sp/>DOXYGEN_SHOULD_SKIP_THIS</highlight></codeline>
    </programlisting>
    <location file="src/dm_fx_spi_proto.cpp"/>
  </compounddef>
</doxygen>
