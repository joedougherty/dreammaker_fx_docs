<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.15">
  <compounddef id="dm__fx__debug_8cpp" kind="file" language="C++">
    <compoundname>dm_fx_debug.cpp</compoundname>
    <includes refid="dreammakerfx_8h" local="yes">dreammakerfx.h</includes>
    <includes refid="dm__fx__debug_8h" local="yes">dm_fx_debug.h</includes>
    <incdepgraph>
      <node id="40">
        <label>SPI.h</label>
      </node>
      <node id="43">
        <label>dm_fx_dsp.h</label>
        <link refid="dm__fx__dsp_8h_source"/>
      </node>
      <node id="46">
        <label>dm_fx_ui.h</label>
        <link refid="dm__fx__ui_8h_source"/>
      </node>
      <node id="68">
        <label>effects/dm_fx_slicer.h</label>
        <link refid="dm__fx__slicer_8h_source"/>
      </node>
      <node id="50">
        <label>effects/dm_fx_effect_macros.h</label>
        <link refid="dm__fx__effect__macros_8h_source"/>
      </node>
      <node id="38">
        <label>dreammakerfx.h</label>
        <link refid="dreammakerfx_8h_source"/>
        <childnode refid="39" relation="include">
        </childnode>
        <childnode refid="40" relation="include">
        </childnode>
        <childnode refid="41" relation="include">
        </childnode>
        <childnode refid="42" relation="include">
        </childnode>
        <childnode refid="43" relation="include">
        </childnode>
        <childnode refid="44" relation="include">
        </childnode>
        <childnode refid="45" relation="include">
        </childnode>
        <childnode refid="46" relation="include">
        </childnode>
        <childnode refid="47" relation="include">
        </childnode>
        <childnode refid="48" relation="include">
        </childnode>
        <childnode refid="49" relation="include">
        </childnode>
        <childnode refid="50" relation="include">
        </childnode>
        <childnode refid="51" relation="include">
        </childnode>
        <childnode refid="52" relation="include">
        </childnode>
        <childnode refid="53" relation="include">
        </childnode>
        <childnode refid="54" relation="include">
        </childnode>
        <childnode refid="55" relation="include">
        </childnode>
        <childnode refid="56" relation="include">
        </childnode>
        <childnode refid="57" relation="include">
        </childnode>
        <childnode refid="58" relation="include">
        </childnode>
        <childnode refid="59" relation="include">
        </childnode>
        <childnode refid="60" relation="include">
        </childnode>
        <childnode refid="61" relation="include">
        </childnode>
        <childnode refid="62" relation="include">
        </childnode>
        <childnode refid="63" relation="include">
        </childnode>
        <childnode refid="64" relation="include">
        </childnode>
        <childnode refid="65" relation="include">
        </childnode>
        <childnode refid="66" relation="include">
        </childnode>
        <childnode refid="67" relation="include">
        </childnode>
        <childnode refid="68" relation="include">
        </childnode>
        <childnode refid="69" relation="include">
        </childnode>
      </node>
      <node id="62">
        <label>effects/dm_fx_looper.h</label>
        <link refid="dm__fx__looper_8h_source"/>
      </node>
      <node id="52">
        <label>effects/dm_fx_allpass_filter.h</label>
        <link refid="dm__fx__allpass__filter_8h_source"/>
      </node>
      <node id="60">
        <label>effects/dm_fx_gain.h</label>
        <link refid="dm__fx__gain_8h_source"/>
      </node>
      <node id="49">
        <label>effects/dm_fx_effects_defines.h</label>
        <link refid="dm__fx__effects__defines_8h"/>
      </node>
      <node id="64">
        <label>effects/dm_fx_oscillators.h</label>
        <link refid="dm__fx__oscillators_8h_source"/>
      </node>
      <node id="56">
        <label>effects/dm_fx_compressor.h</label>
        <link refid="dm__fx__compressor_8h_source"/>
      </node>
      <node id="53">
        <label>effects/dm_fx_amplitude_modulator.h</label>
        <link refid="dm__fx__amplitude__modulator_8h_source"/>
      </node>
      <node id="44">
        <label>dm_fx_spi_proto.h</label>
        <link refid="dm__fx__spi__proto_8h_source"/>
      </node>
      <node id="66">
        <label>effects/dm_fx_pitch_shift.h</label>
        <link refid="dm__fx__pitch__shift_8h_source"/>
      </node>
      <node id="41">
        <label>Wire.h</label>
      </node>
      <node id="45">
        <label>dm_fx_codec.h</label>
        <link refid="dm__fx__codec_8h_source"/>
      </node>
      <node id="65">
        <label>effects/dm_fx_phase_shifter.h</label>
        <link refid="dm__fx__phase__shifter_8h_source"/>
      </node>
      <node id="37">
        <label>src/dm_fx_debug.cpp</label>
        <link refid="dm__fx__debug_8cpp"/>
        <childnode refid="38" relation="include">
        </childnode>
        <childnode refid="47" relation="include">
        </childnode>
      </node>
      <node id="67">
        <label>effects/dm_fx_ring_modulator.h</label>
        <link refid="dm__fx__ring__modulator_8h_source"/>
      </node>
      <node id="59">
        <label>effects/dm_fx_envelope_tracker.h</label>
        <link refid="dm__fx__envelope__tracker_8h_source"/>
      </node>
      <node id="51">
        <label>effects/dm_fx_adsr_envelope.h</label>
        <link refid="dm__fx__adsr__envelope_8h_source"/>
      </node>
      <node id="61">
        <label>effects/dm_fx_instrument_synth.h</label>
        <link refid="dm__fx__instrument__synth_8h_source"/>
      </node>
      <node id="42">
        <label>math.h</label>
      </node>
      <node id="39">
        <label>Arduino.h</label>
      </node>
      <node id="47">
        <label>dm_fx_debug.h</label>
        <link refid="dm__fx__debug_8h_source"/>
      </node>
      <node id="54">
        <label>effects/dm_fx_biquad_filter.h</label>
        <link refid="dm__fx__biquad__filter_8h_source"/>
      </node>
      <node id="55">
        <label>effects/dm_fx_destructor.h</label>
        <link refid="dm__fx__destructor_8h_source"/>
      </node>
      <node id="69">
        <label>effects/dm_fx_variable_delay.h</label>
        <link refid="dm__fx__variable__delay_8h_source"/>
      </node>
      <node id="48">
        <label>dm_fx_platform_constants.h</label>
        <link refid="dm__fx__platform__constants_8h_source"/>
      </node>
      <node id="58">
        <label>effects/dm_fx_delay_multitap.h</label>
        <link refid="dm__fx__delay__multitap_8h_source"/>
      </node>
      <node id="57">
        <label>effects/dm_fx_delay.h</label>
        <link refid="dm__fx__delay_8h_source"/>
      </node>
      <node id="63">
        <label>effects/dm_fx_mixers.h</label>
        <link refid="dm__fx__mixers_8h_source"/>
      </node>
    </incdepgraph>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//<sp/>Copyright<sp/>(c)<sp/>2020<sp/>Run<sp/>Jump<sp/>Labs<sp/>LLC.<sp/><sp/>All<sp/>right<sp/>reserved.<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">//<sp/>This<sp/>code<sp/>is<sp/>licensed<sp/>under<sp/>MIT<sp/>license<sp/>(see<sp/>license.txt<sp/>for<sp/>details)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;dreammakerfx.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;dm_fx_debug.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>DOXYGEN_SHOULD_SKIP_THIS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Support<sp/>for<sp/>Serial<sp/>debug<sp/>messages</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal">DEBUG_MSG_LEVEL<sp/>dmfx_debug_level;</highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>debug_levels[4][6]<sp/>=<sp/>{</highlight><highlight class="stringliteral">&quot;DEBUG&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;INFO&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;WARN&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;ERROR&quot;</highlight><highlight class="normal">};</highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Global<sp/>debug<sp/>flags<sp/>accessible<sp/>outside<sp/>of<sp/>class<sp/>structure</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>dmfx_debug_mode<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>dmfx_dsp_telemetry_mode<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>dmfx_debug_no_reset<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/>display_error_status(uint8_t<sp/>error_number)<sp/>{</highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/>digitalWrite(PIN_DSP_RESET,<sp/>LOW);</highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i=0;i&lt;20;i++)<sp/>{</highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#if<sp/>defined<sp/>(DM_FX)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>turn_on_left_footsw_led();</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>turn_off_right_footsw_led();</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>delay(50);</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>turn_off_left_footsw_led();;</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>turn_on_right_footsw_led();;</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>delay(50);</highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#elif<sp/>defined<sp/>(DM_FX_TWO)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>digitalWrite(PIN_ARD_LED_G,<sp/>HIGH);</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>digitalWrite(PIN_ARD_LED_Y,<sp/>LOW);</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>delay(50);</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>digitalWrite(PIN_ARD_LED_G,<sp/>LOW);</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>digitalWrite(PIN_ARD_LED_Y,<sp/>HIGH);</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>delay(50);<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#if<sp/>defined<sp/>(DM_FX)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/>turn_on_left_footsw_led();</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/>turn_off_right_footsw_led();;</highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#elif<sp/>defined<sp/>(DM_FX_TWO)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/>digitalWrite(PIN_ARD_LED_Y,<sp/>HIGH);</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/>digitalWrite(PIN_ARD_LED_G,<sp/>LOW);</highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#endif<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(1)<sp/>{</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i=0;i&lt;error_number;i++)<sp/>{</highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>#if<sp/>defined<sp/>(DM_FX)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>turn_on_right_footsw_led();;</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>delay(250);</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>turn_off_right_footsw_led();</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>delay(250);</highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>#elif<sp/>defined<sp/>(DM_FX_TWO)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>digitalWrite(PIN_ARD_LED_G,<sp/>HIGH);</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>delay(250);</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>digitalWrite(PIN_ARD_LED_G,<sp/>LOW);</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>delay(250);</highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>#endif<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/>delay(2000);</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/>}<sp/></highlight></codeline>
<codeline lineno="70"><highlight class="normal">}</highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Code<sp/>to<sp/>drop<sp/>back<sp/>into<sp/>bootloader</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>DBL_TAP_MAGIC<sp/>0xf01669ef<sp/>//<sp/>Randomly<sp/>selected,<sp/>adjusted<sp/>to<sp/>have<sp/>first<sp/>and<sp/>last<sp/>bit<sp/>set</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>DBL_TAP_MAGIC_QUICK_BOOT<sp/>0xf02669ef</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>DBL_TAP_PTR<sp/>((volatile<sp/>uint32_t<sp/>*)(HSRAM_ADDR<sp/>+<sp/>HSRAM_SIZE<sp/>-<sp/>4))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>reset_into_bootloader(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>reset<sp/>without<sp/>waiting<sp/>for<sp/>double<sp/>tap<sp/>(only<sp/>works<sp/>for<sp/>one<sp/>reset)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/>*DBL_TAP_PTR<sp/>=<sp/>DBL_TAP_MAGIC;</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/>NVIC_SystemReset();</highlight></codeline>
<codeline lineno="85"><highlight class="normal">}</highlight></codeline>
<codeline lineno="86"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight></codeline>
<codeline lineno="88"><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="src/dm_fx_debug.cpp"/>
  </compounddef>
</doxygen>
